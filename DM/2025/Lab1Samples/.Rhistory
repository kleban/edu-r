agents <- data.frame(
agent_id = 201:205,
name = c("Anna", "Diana", "Vlad", "Yulia", "Roman")
)
agents
agents <- data.frame(
agent_id = 201:205,
name = c("Anna", "Diana", "Vlad", "Yulia", "Roman"),
experience_years = sample(1:3, size = 5, replace = T),
department  = sample(c("Tech", "Billing", "Sales", size = 5, replace = T))
)
agents
agents <- data.frame(
agent_id = 201:205,
name = c("Anna", "Diana", "Vlad", "Yulia", "Roman"),
experience_years = sample(1:3, size = 5, replace = T),
department  = sample(c("Tech", "Billing", "Sales", size = 5, replace = T))
)
agents
agents <- data.frame(
agent_id = 201:205,
name = c("Anna", "Diana", "Vlad", "Yulia", "Roman"),
experience_years = sample(1:3, size = 5, replace = T),
department  = sample(c("Tech", "Billing", "Sales"), size = 5, replace = T))
agents <- data.frame(
agent_id = 201:205,
name = c("Anna", "Diana", "Vlad", "Yulia", "Roman"),
experience_years = sample(1:3, size = 5, replace = T),
department  = sample(c("Tech", "Billing", "Sales"), size = 5, replace = T))
agents
user_order <- sample(1:5, size = 10, replace = T)
user_order
data <- data.frame(id = 1:10,
user = sample(agents$name, size = 10, replace = T),
deparment = NA)
data
data <- data.frame(Name = c("Laptop Macbook Air", "Avocado", "Tesla ModelS"),
Low = c(300, 1.5, 25000),
High = c(1200, 5.2, 55000))
data
prods <- data.frame(
Product = sample(data$Name, size = 10, replace = T),
Price = 0)
prods
for(n in 1:nrow(data)) {
prods[prods$Product == data[n, "Name"], ]$Price <-
round(runif(nrow(prods[prods$Product == data[n, "Name"],]), min = data[n,"Low"], max = data[n,"High"]), 2)
}
prods
agents <- data.frame(
agent_id = 201:205,
name = c("Anna", "Diana", "Vlad", "Yulia", "Roman"),
experience_years = sample(1:3, size = 5, replace = T),
department  = sample(c("Tech", "Billing", "Sales"), size = 5, replace = T))
agents
user_order <- sample(1:5, size = 10, replace = T)
user_order
data <- data.frame(id = 1:10,
user = sample(agents$name, size = 10, replace = T),
deparment = NA)
for(n in 1:nrow(agents)) {
data[data$name == agents[n, "name"]]$deparment <- agents[n, "department"]
}
data
n = 1
data[data$name == agents[n, "name"]]
data[data$name == agents[n, "name"],]
data[,data$name == agents[n, "name"]]
agents[n, "name"]
data$name
data <- data.frame(id = 1:10,
user = sample(agents$name, size = 10, replace = T),
deparment = NA)
for(n in 1:nrow(agents)) {
data[data$user == agents[n, "name"], ]$deparment <- agents[n, "department"]
}
for(n in 1:nrow(agents)) {
data[data$user == agents[n, "name"]]$deparment <- agents[n, "department"]
}
data
n = 1
agents[n, "department"]
data[data$user == agents[n, "name"]]
data[data$user == agents[n, "name"],]
data <- data.frame(id = 1:10,
user = sample(agents$name, size = 10, replace = T),
deparment = NA)
for(n in 1:nrow(agents)) {
data[data$user == agents[n, "name"],]$deparment <- agents[n, "department"]
}
data[data$user == agents[n, "name"],]
data[data$user == agents[n, "name"]]
n = 0
n = 1
data[data$user == agents[n, "name"]]
data[,data$user == agents[n, "name"]]
data[data$user == agents[n, "name"],]
data <- data.frame(id = 1:10,
user = sample(agents$name, size = 10, replace = T),
department = NA)
data[data$user == agents[n, "name"],]$department
data[data$user == agents[n, "name"],]
agents[n, "department"]
agents
for(n in 1:nrow(agents)) {
data[data$user == agents[n, "name"],]$department <- agents[n, "department"]
}
data
agents <- data.frame(
agent_id = 201:205,
name = c("Anna", "Diana", "Vlad", "Yulia", "Roman"),
experience_years = sample(1:3, size = 5, replace = T),
department  = sample(c("Tech", "Billing", "Sales"), size = 5, replace = T))
agents
data <- data.frame(id = 1:10,
user = sample(agents$name, size = 10, replace = T),
department = NA)
for(n in 1:nrow(agents)) {
data[data$user == agents[n, "name"],]$department <- agents[n, "department"]
}
data
library(lubridate)
set.seed(123)
client_info <- data.frame(
client_id = 1:5,
client_name = paste("Client", 1:5),
industry = sample(c("E-commerce", "B2B", "Retail", "Technology", "Healthcare"), 5, replace = TRUE),
target_audience = sample(c("Youth", "Adults", "Seniors", "Business"), 5, replace = TRUE),
region = sample(c("North", "South", "East", "West", "Global"), 5, replace = TRUE)
)
campaigns <- data.frame(
campaign_id = 1:10,
campaign_name = paste("Campaign", 1:10),
client_id = sample(client_info$client_id, 10, replace = TRUE),
start_date = sample(seq(Sys.Date() - 180, Sys.Date() - 30, by = "days"), 10),
end_date = NA,
budget = sample(1000:50000, 10, replace = TRUE),
platform = sample(c("Facebook", "Instagram", "Google Ads", "LinkedIn"), 10, replace = TRUE)
)
campaigns$end_date <- campaigns$start_date + sample(1:30, 10, replace = TRUE)
ad_performance <- data.frame(
performance_id = 1:50,
campaign_id = sample(campaigns$campaign_id, 50, replace = TRUE),
impressions = sample(100:10000, 50, replace = TRUE),
clicks = sample(1:500, 50, replace = TRUE),
spend = runif(50, 10, 1000),
conversions = sample(0:50, 50, replace = TRUE)
)
ad_performance
ad_performance <- merge(ad_performance, campaigns[, c("campaign_id", "start_date", "end_date")], by = "campaign_id")
ad_performance$date <- as.Date(sapply(1:nrow(ad_performance), function(i) {
sample(seq(ad_performance$start_date[i], ad_performance$end_date[i], by = "day"), 1)
}))
ad_performance <- ad_performance[, !(names(ad_performance) %in% c("start_date", "end_date"))]
Ad_Performance$clicks <- ifelse(Ad_Performance$clicks > Ad_Performance$impressions,
Ad_Performance$impressions,
Ad_Performance$clicks)
Ad_Performance$conversions <- ifelse(Ad_Performance$conversions > Ad_Performance$clicks,
Ad_Performance$clicks,
Ad_Performance$conversions)
merged_data1 <- merge(campaigns, client_info, by = "client_id")
merged_data2 <- merge(merged_data1, ad_performance, by = "campaign_id")
merged_data2
Sys.Date() - 30
merged_data2$date
max_date <- merged_data2$date
max_date
max_date <- max(merged_data2$date)
max_date
filtered_data <- merged_data2[
merged_data2$date >= max_date - 30 &
merged_data2$date <= max_date]
filtered_data <- merged_data2[
merged_data2$date >= max_date - 30 &
merged_data2$date <= max_date,]
filtered_data
library(lubridate)
set.seed(123)
client_info <- data.frame(
client_id = 1:5,
client_name = paste("Client", 1:5),
industry = sample(c("E-commerce", "B2B", "Retail", "Technology", "Healthcare"), 5, replace = TRUE),
target_audience = sample(c("Youth", "Adults", "Seniors", "Business"), 5, replace = TRUE),
region = sample(c("North", "South", "East", "West", "Global"), 5, replace = TRUE)
)
campaigns <- data.frame(
campaign_id = 1:10,
campaign_name = paste("Campaign", 1:10),
client_id = sample(client_info$client_id, 10, replace = TRUE),
start_date = sample(seq(Sys.Date() - 180, Sys.Date() - 30, by = "days"), 10),
end_date = NA,
budget = sample(1000:50000, 10, replace = TRUE),
platform = sample(c("Facebook", "Instagram", "Google Ads", "LinkedIn"), 10, replace = TRUE)
)
campaigns$end_date <- campaigns$start_date + sample(1:30, 10, replace = TRUE)
ad_performance <- data.frame(
performance_id = 1:50,
campaign_id = sample(campaigns$campaign_id, 50, replace = TRUE),
impressions = sample(100:10000, 50, replace = TRUE),
clicks = sample(1:500, 50, replace = TRUE),
spend = runif(50, 10, 1000),
conversions = sample(0:50, 50, replace = TRUE)
)
ad_performance <- merge(ad_performance, campaigns[, c("campaign_id", "start_date", "end_date")], by = "campaign_id")
ad_performance$date <- as.Date(sapply(1:nrow(ad_performance), function(i) {
sample(seq(ad_performance$start_date[i], ad_performance$end_date[i], by = "day"), 1)
}))
ad_performance <- ad_performance[, !(names(ad_performance) %in% c("start_date", "end_date"))]
Ad_Performance$clicks <- ifelse(Ad_Performance$clicks > Ad_Performance$impressions,
Ad_Performance$impressions,
Ad_Performance$clicks)
Ad_Performance$conversions <- ifelse(Ad_Performance$conversions > Ad_Performance$clicks,
Ad_Performance$clicks,
Ad_Performance$conversions)
merged_data1 <- merge(campaigns, client_info, by = "client_id")
merged_data2 <- merge(merged_data1, ad_performance, by = "campaign_id")
merged_data2
View(merged_data2)
max_date <- max(merged_data2$date)
max_date
filtered_data <- merged_data2[
merged_data2$date >= max_date - 30 &
merged_data2$date <= max_date,]
filtered_data
View(filtered_data)
filtered_data[c(4,5,10),]
filtered_data[, c(4,5,10)]
filtered_data[, c(4,5,20)]
filtered_data[, c(4,5,20)]
filtered_data[, c(4,5,15)]
filtered_data[, c(4,5,17)]
as.Date(c("2024.03.23"))
as.Date(c("2024-03-23"))
library(lubridate)
set.seed(123)
client_info <- data.frame(
client_id = 1:5,
client_name = paste("Client", 1:5),
industry = sample(c("E-commerce", "B2B", "Retail", "Technology", "Healthcare"), 5, replace = TRUE),
target_audience = sample(c("Youth", "Adults", "Seniors", "Business"), 5, replace = TRUE),
region = sample(c("North", "South", "East", "West", "Global"), 5, replace = TRUE)
)
campaigns <- data.frame(
campaign_id = 1:10,
campaign_name = paste("Campaign", 1:10),
client_id = sample(client_info$client_id, 10, replace = TRUE),
start_date = sample(seq(Sys.Date() - 180, Sys.Date() - 30, by = "days"), 10),
end_date = NA,
budget = sample(1000:50000, 10, replace = TRUE),
platform = sample(c("Facebook", "Instagram", "Google Ads", "LinkedIn"), 10, replace = TRUE)
)
campaigns$end_date <- campaigns$start_date + sample(1:30, 10, replace = TRUE)
ad_performance <- data.frame(
performance_id = 1:50,
campaign_id = sample(campaigns$campaign_id, 50, replace = TRUE),
impressions = sample(100:10000, 50, replace = TRUE),
clicks = sample(1:500, 50, replace = TRUE),
spend = runif(50, 10, 1000),
conversions = sample(0:50, 50, replace = TRUE)
)
as.Date(c("2024-03-23"))
ad_performance <- merge(ad_performance, campaigns[, c("campaign_id", "start_date", "end_date")], by = "campaign_id")
ad_performance$date <- as.Date(sapply(1:nrow(ad_performance), function(i) {
sample(seq(ad_performance$start_date[i], ad_performance$end_date[i], by = "day"), 1)
}))
ad_performance <- ad_performance[, !(names(ad_performance) %in% c("start_date", "end_date"))]
Ad_Performance$clicks <- ifelse(Ad_Performance$clicks > Ad_Performance$impressions,
Ad_Performance$impressions,
Ad_Performance$clicks)
Ad_Performance$conversions <- ifelse(Ad_Performance$conversions > Ad_Performance$clicks,
Ad_Performance$clicks,
Ad_Performance$conversions)
merged_data1 <- merge(campaigns, client_info, by = "client_id")
merged_data2 <- merge(merged_data1, ad_performance, by = "campaign_id")
library(lubridate)
set.seed(123)
client_info <- data.frame(
client_id = 1:5,
client_name = paste("Client", 1:5),
industry = sample(c("E-commerce", "B2B", "Retail", "Technology", "Healthcare"), 5, replace = TRUE),
target_audience = sample(c("Youth", "Adults", "Seniors", "Business"), 5, replace = TRUE),
region = sample(c("North", "South", "East", "West", "Global"), 5, replace = TRUE)
)
campaigns <- data.frame(
campaign_id = 1:10,
campaign_name = paste("Campaign", 1:10),
client_id = sample(client_info$client_id, 10, replace = TRUE),
start_date = sample(seq(Sys.Date() - 180, Sys.Date() - 30, by = "days"), 10),
end_date = NA,
budget = sample(1000:50000, 10, replace = TRUE),
platform = sample(c("Facebook", "Instagram", "Google Ads", "LinkedIn"), 10, replace = TRUE)
)
campaigns$end_date <- campaigns$start_date + sample(1:30, 10, replace = TRUE)
ad_performance <- data.frame(
performance_id = 1:50,
campaign_id = sample(campaigns$campaign_id, 50, replace = TRUE),
impressions = sample(100:10000, 50, replace = TRUE),
clicks = sample(1:500, 50, replace = TRUE),
spend = runif(50, 10, 1000),
conversions = sample(0:50, 50, replace = TRUE)
)
ad_performance <- merge(ad_performance, campaigns[, c("campaign_id", "start_date", "end_date")], by = "campaign_id")
ad_performance$date <- as.Date(sapply(1:nrow(ad_performance), function(i) {
sample(seq(ad_performance$start_date[i], ad_performance$end_date[i], by = "day"), 1)
}))
ad_performance <- ad_performance[, !(names(ad_performance) %in% c("start_date", "end_date"))]
Ad_Performance$clicks <- ifelse(Ad_Performance$clicks > Ad_Performance$impressions,
Ad_Performance$impressions,
Ad_Performance$clicks)
merged_data1 <- merge(campaigns, client_info, by = "client_id")
merged_data2 <- merge(merged_data1, ad_performance, by = "campaign_id")
merged_data2
max_date <- max(merged_data2$date)
max_date
filtered_data <- merged_data2[
merged_data2$date >= max_date - 30 &
merged_data2$date <= max_date,]
filtered_data
View(filtered_data)
View(merged_data2)
aggregate(filtered_data, list(Region = spent), sum)
aggregate(x = filtered_data, by = list(filtered_data$spend, filtered_data$clicks), FUN = "sum")
aggregate(x = filtered_data, by = list(filtered_data$spend, filtered_data$clicks), FUN = "sum")
aggregate(x = filtered_data, by = list(filtered_data$spend, filtered_data$clicks), FUN = "mean")
aggregate(clicks ~ spent, data = filtered_data, sum)
aggregate(clicks ~ spend, data = filtered_data, sum)
aggregate(platform ~ clicks, data = filtered_data, sum)
aggregate(clicks, data = filtered_data, sum)
aggregate(platform ~ clicks, data = filtered_data, sum)
filtered_data$platform <- as.factor(filtered_data$platform)
aggregate(platform ~ clicks, data = filtered_data, sum)
aggregate(platform ~ clicks, data = filtered_data, mean)
View(filtered_data)
aggregate(x = filtered_data, by = list(filtered_data$spend, filtered_data$clicks), FUN = "mean")
aggregate(x = filtered_data, by = list(filtered_data$platform, filtered_data$clicks), FUN = "mean")
aggregate(platform ~ clicks, data = filtered_data, mean)
aggregate(platform, data = filtered_data, mean)
aggregate(.~platform, data = filtered_data, mean)
aggregate(clicks~platform, data = filtered_data, mean)
aggregate(spend + clicks~platform, data = filtered_data, sum)
aggregate(spend ~ clicks~platform, data = filtered_data, sum)
aggregate(clicks~platform, data = filtered_data, sum)
aggregate(spend~platform, data = filtered_data, sum)
